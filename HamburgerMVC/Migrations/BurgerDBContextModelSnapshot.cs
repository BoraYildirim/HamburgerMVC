// <auto-generated />
using System;
using HamburgerMVC.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HamburgerMVC.Migrations
{
    [DbContext(typeof(BurgerDBContext))]
    partial class BurgerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HamburgerMVC.Models.Boy", b =>
                {
                    b.Property<int>("BoyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoyID"));

                    b.Property<string>("BoyAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BoyCarpani")
                        .HasColumnType("float");

                    b.HasKey("BoyID");

                    b.ToTable("Boys");

                    b.HasData(
                        new
                        {
                            BoyID = 1,
                            BoyAdi = "Kucuk",
                            BoyCarpani = 1.0
                        },
                        new
                        {
                            BoyID = 2,
                            BoyAdi = "Orta",
                            BoyCarpani = 1.1000000000000001
                        },
                        new
                        {
                            BoyID = 3,
                            BoyAdi = "Buyuk",
                            BoyCarpani = 1.2
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.EkMalzeme", b =>
                {
                    b.Property<int>("EkMalzemeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EkMalzemeID"));

                    b.Property<string>("EkMalzemeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EkMalzemeFiyat")
                        .HasColumnType("money");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EkMalzemeID");

                    b.ToTable("EkMalzemes");

                    b.HasData(
                        new
                        {
                            EkMalzemeID = 1,
                            EkMalzemeAdi = "Sogan",
                            EkMalzemeFiyat = 10m
                        },
                        new
                        {
                            EkMalzemeID = 2,
                            EkMalzemeAdi = "Marul",
                            EkMalzemeFiyat = 8m
                        },
                        new
                        {
                            EkMalzemeID = 3,
                            EkMalzemeAdi = "Domates",
                            EkMalzemeFiyat = 12m
                        },
                        new
                        {
                            EkMalzemeID = 4,
                            EkMalzemeAdi = "Peynir",
                            EkMalzemeFiyat = 20m
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.Hamburger", b =>
                {
                    b.Property<int>("HamburgerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HamburgerID"));

                    b.Property<string>("HamburgerAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HamburgerFiyat")
                        .HasColumnType("money");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HamburgerID");

                    b.ToTable("Hamburgers");

                    b.HasData(
                        new
                        {
                            HamburgerID = 1,
                            HamburgerAdi = "ChickenShow",
                            HamburgerFiyat = 200m
                        },
                        new
                        {
                            HamburgerID = 2,
                            HamburgerAdi = "DoubleShow",
                            HamburgerFiyat = 280m
                        },
                        new
                        {
                            HamburgerID = 3,
                            HamburgerAdi = "SteakShow",
                            HamburgerFiyat = 240m
                        },
                        new
                        {
                            HamburgerID = 4,
                            HamburgerAdi = "McShow",
                            HamburgerFiyat = 310m
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.HamburgerEkMalzeme", b =>
                {
                    b.Property<int>("HamburgerEkMalzemeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HamburgerEkMalzemeID"));

                    b.Property<int>("EkMalzemeID")
                        .HasColumnType("int");

                    b.Property<int>("HamburgerID")
                        .HasColumnType("int");

                    b.HasKey("HamburgerEkMalzemeID");

                    b.HasIndex("EkMalzemeID");

                    b.HasIndex("HamburgerID");

                    b.ToTable("HamburgerEkMalzemes");
                });

            modelBuilder.Entity("HamburgerMVC.Models.Icecek", b =>
                {
                    b.Property<int>("IcecekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IcecekID"));

                    b.Property<string>("IcecekAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IcecekFiyat")
                        .HasColumnType("money");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IcecekID");

                    b.ToTable("Iceceks");

                    b.HasData(
                        new
                        {
                            IcecekID = 1,
                            IcecekAdi = "Kola",
                            IcecekFiyat = 30m
                        },
                        new
                        {
                            IcecekID = 2,
                            IcecekAdi = "Fanta",
                            IcecekFiyat = 30m
                        },
                        new
                        {
                            IcecekID = 3,
                            IcecekAdi = "Ayran",
                            IcecekFiyat = 20m
                        },
                        new
                        {
                            IcecekID = 4,
                            IcecekAdi = "Sprite",
                            IcecekFiyat = 30m
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"));

                    b.Property<int>("BoyID")
                        .HasColumnType("int");

                    b.Property<int>("HamburgerID")
                        .HasColumnType("int");

                    b.Property<int>("IcecekID")
                        .HasColumnType("int");

                    b.Property<string>("MenuAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MenuFiyat")
                        .HasColumnType("money");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YanUrunID")
                        .HasColumnType("int");

                    b.HasKey("MenuID");

                    b.HasIndex("BoyID");

                    b.HasIndex("HamburgerID");

                    b.HasIndex("IcecekID");

                    b.HasIndex("YanUrunID");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            BoyID = 1,
                            HamburgerID = 1,
                            IcecekID = 1,
                            MenuAdi = "GamerMenu",
                            MenuFiyat = 300m,
                            Resim = "Burger1.jpg",
                            YanUrunID = 1
                        },
                        new
                        {
                            MenuID = 2,
                            BoyID = 1,
                            HamburgerID = 2,
                            IcecekID = 2,
                            MenuAdi = "DoyuranMenu",
                            MenuFiyat = 350m,
                            Resim = "Burger2.jpg",
                            YanUrunID = 2
                        },
                        new
                        {
                            MenuID = 3,
                            BoyID = 1,
                            HamburgerID = 3,
                            IcecekID = 3,
                            MenuAdi = "GurmeMenu",
                            MenuFiyat = 370m,
                            Resim = "Burger3.jpg",
                            YanUrunID = 2
                        },
                        new
                        {
                            MenuID = 4,
                            BoyID = 1,
                            HamburgerID = 4,
                            IcecekID = 4,
                            MenuAdi = "BEUMenu",
                            MenuFiyat = 400m,
                            Resim = "Burger4.jpg",
                            YanUrunID = 4
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "2b785952-daa8-406b-8daf-7646551b3708",
                            Name = "Yonetici",
                            NormalizedName = "YONETICI"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "7fd729e8-008f-49ff-b49c-29c82195a1da",
                            Name = "Uye",
                            NormalizedName = "UYE"
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.Sos", b =>
                {
                    b.Property<int>("SosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SosID"));

                    b.Property<string>("SosAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SosFiyat")
                        .HasColumnType("money");

                    b.HasKey("SosID");

                    b.ToTable("Sos");

                    b.HasData(
                        new
                        {
                            SosID = 1,
                            SosAdi = "Ketcap",
                            SosFiyat = 5m
                        },
                        new
                        {
                            SosID = 2,
                            SosAdi = "Mayonez",
                            SosFiyat = 5m
                        },
                        new
                        {
                            SosID = 3,
                            SosAdi = "Hardal",
                            SosFiyat = 8m
                        },
                        new
                        {
                            SosID = 4,
                            SosAdi = "Ranch",
                            SosFiyat = 10m
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.SosMenu", b =>
                {
                    b.Property<int>("SosMenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SosMenuID"));

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("SosID")
                        .HasColumnType("int");

                    b.HasKey("SosMenuID");

                    b.HasIndex("MenuID");

                    b.HasIndex("SosID");

                    b.ToTable("SosMenu");
                });

            modelBuilder.Entity("HamburgerMVC.Models.Uye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Ad = "Bora",
                            Adres = "Uskudar",
                            ConcurrencyStamp = "777602df-baca-41e4-a19f-24e6a0ff8c72",
                            Email = "Bora@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BORA@GMAIL.COM",
                            NormalizedUserName = "BORA@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHjazcFnVOzuy0tXfK6I8dx55o3qPp1f4I30sHIP6ph1j1oiGT9A6I/AjBlUahN07Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6dd6b5de-f5e0-4959-bb03-efc11393eb84",
                            Soyad = "Yildirim",
                            TwoFactorEnabled = false,
                            UserName = "Bora@gmail.com"
                        });
                });

            modelBuilder.Entity("HamburgerMVC.Models.ViewModels.Login_VM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Login_VM");
                });

            modelBuilder.Entity("HamburgerMVC.Models.ViewModels.Register_VM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Register_VM");
                });

            modelBuilder.Entity("HamburgerMVC.Models.YanUrun", b =>
                {
                    b.Property<int>("YanUrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YanUrunID"));

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YanUrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("YanUrunFiyat")
                        .HasColumnType("money");

                    b.HasKey("YanUrunID");

                    b.ToTable("YanUruns");

                    b.HasData(
                        new
                        {
                            YanUrunID = 1,
                            YanUrunAdi = "Patates",
                            YanUrunFiyat = 20m
                        },
                        new
                        {
                            YanUrunID = 2,
                            YanUrunAdi = "SoganHalkasi",
                            YanUrunFiyat = 30m
                        },
                        new
                        {
                            YanUrunID = 3,
                            YanUrunAdi = "Salata",
                            YanUrunFiyat = 10m
                        },
                        new
                        {
                            YanUrunID = 4,
                            YanUrunAdi = "PeynirCubugu",
                            YanUrunFiyat = 20m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HamburgerMVC.Models.HamburgerEkMalzeme", b =>
                {
                    b.HasOne("HamburgerMVC.Models.EkMalzeme", "EkMalzeme")
                        .WithMany("HamburgerEkMalzemes")
                        .HasForeignKey("EkMalzemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamburgerMVC.Models.Hamburger", "Hamburger")
                        .WithMany("HamburgerEkMalzemes")
                        .HasForeignKey("HamburgerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EkMalzeme");

                    b.Navigation("Hamburger");
                });

            modelBuilder.Entity("HamburgerMVC.Models.Menu", b =>
                {
                    b.HasOne("HamburgerMVC.Models.Boy", "Boy")
                        .WithMany("Menus")
                        .HasForeignKey("BoyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamburgerMVC.Models.Hamburger", "Hamburger")
                        .WithMany("Menus")
                        .HasForeignKey("HamburgerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamburgerMVC.Models.Icecek", "Icecek")
                        .WithMany("Menus")
                        .HasForeignKey("IcecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamburgerMVC.Models.YanUrun", "YanUrun")
                        .WithMany("Menus")
                        .HasForeignKey("YanUrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boy");

                    b.Navigation("Hamburger");

                    b.Navigation("Icecek");

                    b.Navigation("YanUrun");
                });

            modelBuilder.Entity("HamburgerMVC.Models.SosMenu", b =>
                {
                    b.HasOne("HamburgerMVC.Models.Menu", "Menu")
                        .WithMany("SosMenus")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamburgerMVC.Models.Sos", "Sos")
                        .WithMany("SosMenus")
                        .HasForeignKey("SosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Sos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("HamburgerMVC.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("HamburgerMVC.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("HamburgerMVC.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("HamburgerMVC.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamburgerMVC.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("HamburgerMVC.Models.Uye", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HamburgerMVC.Models.Boy", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("HamburgerMVC.Models.EkMalzeme", b =>
                {
                    b.Navigation("HamburgerEkMalzemes");
                });

            modelBuilder.Entity("HamburgerMVC.Models.Hamburger", b =>
                {
                    b.Navigation("HamburgerEkMalzemes");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("HamburgerMVC.Models.Icecek", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("HamburgerMVC.Models.Menu", b =>
                {
                    b.Navigation("SosMenus");
                });

            modelBuilder.Entity("HamburgerMVC.Models.Sos", b =>
                {
                    b.Navigation("SosMenus");
                });

            modelBuilder.Entity("HamburgerMVC.Models.YanUrun", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
